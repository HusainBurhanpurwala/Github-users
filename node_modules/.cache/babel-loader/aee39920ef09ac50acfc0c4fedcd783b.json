{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\task2\\\\src\\\\component\\\\useEffect\\\\UseEffectAPI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Loading from './github/loading';\nimport GithubUsers from \"./github/githubUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UseEffectAPI = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getUsers = async () => {\n    try {\n      const response = await fetch('https://api.github.com/users');\n      setLoading(false);\n      setUsers(await response.json());\n    } catch (error) {\n      setLoading(false);\n      console.log(\"my error is \" + error);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GithubUsers, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UseEffectAPI, \"+quVjBMM9THpHvnUcBaphXhhZmo=\");\n\n_c = UseEffectAPI;\nexport default UseEffectAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffectAPI\");","map":{"version":3,"sources":["C:/Users/lenovo/task2/src/component/useEffect/UseEffectAPI.js"],"names":["React","useState","useEffect","Loading","GithubUsers","UseEffectAPI","users","setUsers","loading","setLoading","getUsers","response","fetch","json","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMS,QAAQ,GAAG,YAAY;AACzB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACCH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACDF,MAAAA,QAAQ,CAAC,MAAMI,QAAQ,CAACE,IAAT,EAAP,CAAR;AACH,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAgBF,KAA5B;AACH;AACJ,GATD;;AAWAZ,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIF,OAAJ,EAAa;AACT,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CA7BD;;GAAMD,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Loading from './github/loading';\r\nimport GithubUsers from \"./github/githubUsers\";\r\n\r\nconst UseEffectAPI = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n            const response = await fetch('https://api.github.com/users');\r\n             setLoading(false);\r\n            setUsers(await response.json());\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(\"my error is \"+ error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Loading />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GithubUsers users={users}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UseEffectAPI\r\n"]},"metadata":{},"sourceType":"module"}