{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\task2\\\\src\\\\component\\\\useEffect\\\\UseEffectAPI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Loading from './github/loading';\nimport githubUsers from './github/githubUsers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UseEffectAPI = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getUsers = async () => {\n    try {\n      const response = await fetch('https://api.github.com/users');\n      setLoading(false);\n      setUsers(await response.json());\n    } catch (error) {\n      setLoading(false);\n      console.log(\"My error is \" + error);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"githubUsers\", {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UseEffectAPI, \"qCTuiBwHZyEgUz10B+A8oTYLc14=\");\n\n_c = UseEffectAPI;\nexport default UseEffectAPI; // import React, { useState, useEffect } from 'react'\n// import Loading from './github/loading';\n// import GithubUsers from \"./github/githubUsers\";\n// const UseEffectAPI = () => {\n//     const [users, setUsers] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const getUsers = async () => {\n//         try {\n//             const response = await fetch('https://api.github.com/users');\n//              setLoading(false);\n//             setUsers(await response.json());\n//         } catch (error) {\n//             setLoading(false);\n//             console.log(\"my error is \"+ error);\n//         }\n//     }\n//     useEffect(() => {\n//         getUsers();\n//     }, []);\n//     if (loading) {\n//         return <Loading />\n//     }\n//     return (\n//         <>\n//             <GithubUsers users={users}/>\n//         </>\n//     )\n// }\n// export default UseEffectAPI\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffectAPI\");","map":{"version":3,"sources":["C:/Users/lenovo/task2/src/component/useEffect/UseEffectAPI.js"],"names":["React","useState","useEffect","Loading","githubUsers","UseEffectAPI","users","setUsers","loading","setLoading","getUsers","response","fetch","json","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMS,QAAQ,GAAG,YAAW;AACxB,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,QAAQ,CAAC,MAAMI,QAAQ,CAACE,IAAT,EAAP,CAAR;AACH,KAJD,CAIC,OAAMC,KAAN,EAAY;AACTL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAeF,KAA3B;AACH;AAEJ,GAVD;;AAYAZ,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAGF,OAAH,EAAW;AACP,wBAAM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAN;AACH;;AACD,sBACI;AAAA,2BACI;AAAa,MAAA,KAAK,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CA3BD;;GAAMD,Y;;KAAAA,Y;AA6BN,eAAeA,YAAf,C,CA+BA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Loading from './github/loading';\r\nimport githubUsers from './github/githubUsers';\r\nconst UseEffectAPI = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const getUsers = async () =>{\r\n        try{\r\n            const response = await fetch('https://api.github.com/users');\r\n            setLoading(false);\r\n            setUsers(await response.json());\r\n        }catch(error){\r\n            setLoading(false);\r\n            console.log(\"My error is \"+error);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [] );\r\n    \r\n    if(loading){\r\n        return<Loading />\r\n    }\r\n    return (\r\n        <>\r\n            <githubUsers users={users} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UseEffectAPI\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react'\r\n// import Loading from './github/loading';\r\n// import GithubUsers from \"./github/githubUsers\";\r\n\r\n// const UseEffectAPI = () => {\r\n\r\n//     const [users, setUsers] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n\r\n//     const getUsers = async () => {\r\n//         try {\r\n//             const response = await fetch('https://api.github.com/users');\r\n//              setLoading(false);\r\n//             setUsers(await response.json());\r\n//         } catch (error) {\r\n//             setLoading(false);\r\n//             console.log(\"my error is \"+ error);\r\n//         }\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         getUsers();\r\n//     }, []);\r\n\r\n//     if (loading) {\r\n//         return <Loading />\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <GithubUsers users={users}/>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default UseEffectAPI\r\n"]},"metadata":{},"sourceType":"module"}