{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\lenovo\\\\task2\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\lenovo\\\\task2\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\lenovo\\\\task2\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import Loading from'./github/loading';import GithubUsers from'./github/githubUsers';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var UseEffectAPI=function UseEffectAPI(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var getUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('https://api.github.com/users');case 3:response=_context.sent;setLoading(false);_context.t0=setUsers;_context.next=8;return response.json();case 8:_context.t1=_context.sent;(0,_context.t0)(_context.t1);_context.next=16;break;case 12:_context.prev=12;_context.t2=_context[\"catch\"](0);setLoading(false);console.log(\"My error is \"+_context.t2);case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return function getUsers(){return _ref.apply(this,arguments);};}();useEffect(function(){getUsers();},[]);if(loading){return/*#__PURE__*/_jsx(Loading,{});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(GithubUsers,{users:users})});};export default UseEffectAPI;// import React, { useState, useEffect } from 'react'\n// import Loading from './github/loading';\n// import GithubUsers from \"./github/githubUsers\";\n// const UseEffectAPI = () => {\n//     const [users, setUsers] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const getUsers = async () => {\n//         try {\n//             const response = await fetch('https://api.github.com/users');\n//              setLoading(false);\n//             setUsers(await response.json());\n//         } catch (error) {\n//             setLoading(false);\n//             console.log(\"my error is \"+ error);\n//         }\n//     }\n//     useEffect(() => {\n//         getUsers();\n//     }, []);\n//     if (loading) {\n//         return <Loading />\n//     }\n//     return (\n//         <>\n//             <GithubUsers users={users}/>\n//         </>\n//     )\n// }\n// export default UseEffectAPI","map":{"version":3,"sources":["C:/Users/lenovo/task2/src/component/useEffect/UseEffectAPI.js"],"names":["React","useState","useEffect","Loading","GithubUsers","UseEffectAPI","users","setUsers","loading","setLoading","getUsers","fetch","response","json","console","log"],"mappings":"8VAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,C,gGACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAA8BN,QAAQ,CAAC,KAAD,CAAtC,yCAAOO,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,QAAQ,0FAAG,sLAEcC,CAAAA,KAAK,CAAC,8BAAD,CAFnB,QAEHC,QAFG,eAGTH,UAAU,CAAC,KAAD,CAAV,CAHS,YAITF,QAJS,uBAIMK,CAAAA,QAAQ,CAACC,IAAT,EAJN,gJAMTJ,UAAU,CAAC,KAAD,CAAV,CACAK,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAPS,qEAAH,kBAARL,CAAAA,QAAQ,0CAAd,CAYAR,SAAS,CAAC,UAAM,CACZQ,QAAQ,GACX,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAGF,OAAH,CAAW,CACP,mBAAM,KAAC,OAAD,IAAN,CACH,CACD,mBACI,sCACI,KAAC,WAAD,EAAa,KAAK,CAAEF,KAApB,EADJ,EADJ,CAKH,CA3BD,CA6BA,cAAeD,CAAAA,YAAf,CA+BA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Loading from './github/loading';\r\nimport GithubUsers from './github/githubUsers';\r\nconst UseEffectAPI = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const getUsers = async () =>{\r\n        try{\r\n            const response = await fetch('https://api.github.com/users');\r\n            setLoading(false);\r\n            setUsers(await response.json());\r\n        }catch(error){\r\n            setLoading(false);\r\n            console.log(\"My error is \"+error);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [] );\r\n    \r\n    if(loading){\r\n        return<Loading />\r\n    }\r\n    return (\r\n        <>\r\n            <GithubUsers users={users} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UseEffectAPI\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react'\r\n// import Loading from './github/loading';\r\n// import GithubUsers from \"./github/githubUsers\";\r\n\r\n// const UseEffectAPI = () => {\r\n\r\n//     const [users, setUsers] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n\r\n//     const getUsers = async () => {\r\n//         try {\r\n//             const response = await fetch('https://api.github.com/users');\r\n//              setLoading(false);\r\n//             setUsers(await response.json());\r\n//         } catch (error) {\r\n//             setLoading(false);\r\n//             console.log(\"my error is \"+ error);\r\n//         }\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         getUsers();\r\n//     }, []);\r\n\r\n//     if (loading) {\r\n//         return <Loading />\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <GithubUsers users={users}/>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default UseEffectAPI\r\n"]},"metadata":{},"sourceType":"module"}